#!/bin/bash

# Script to deploy Pipe PoP Node

# Script path
SCRIPT_PATH="$HOME/pipe_pop.sh"

# Main menu function
function main_menu() {
    while true; do
        clear
        echo "Pipe PoP Node Deployment Script"
        echo "Created by the community, free to use!"
        echo "============================================"
        echo "Exit the script by pressing ctrl + C."
        echo "Choose an option:"
        echo "1. Deploy Pipe PoP Node"
        echo "2. Exit"
        
        read -p "Enter option (1/2): " choice
        
        case $choice in
            1)
                deploy_pipe_pop_node
                ;;
            2)
                echo "Exiting script."
                exit 0
                ;;
            *)
                echo "Invalid option, please try again."
                sleep 2
                ;;
        esac
    done
}

# Function to deploy Pipe PoP Node
function deploy_pipe_pop_node() {
    # Check if running as root user
    if [ "$(id -u)" != "0" ]; then
        echo "This script needs to be run as root."
        echo "Please use 'sudo -i' or 'sudo' to run the script."
        exit 1
    fi

    # Check for Ubuntu/Debian OS
    if ! grep -E "(Ubuntu|Debian)" /etc/os-release > /dev/null 2>&1; then
        echo "This script is intended to run on Ubuntu or Debian-based systems."
        exit 1
    fi

    # Check system requirements
    echo "Checking system requirements..."
    RAM=$(free -g | awk '/^Mem:/ {print $2}')
    DISK=$(df -h / | awk 'NR==2 {print $2}' | sed 's/G//')

    if [ "$RAM" -lt 4 ]; then
        echo "You need at least 4GB of RAM. Exiting."
        exit 1
    fi

    if [ "$DISK" -lt 100 ]; then
        echo "You need at least 100GB of disk space. Exiting."
        exit 1
    fi

    echo "System requirements met: RAM = ${RAM}GB, Disk = ${DISK}GB"

    # Open port 8003 on firewall (if UFW is used)
    echo "Configuring firewall..."
    sudo ufw allow 8003/tcp
    sudo ufw reload

    # Create directory for Pipe PoP Node installation
    echo "Creating directory for Pipe PoP Node..."
    mkdir -p $HOME/pipe-pop
    cd $HOME/pipe-pop

    # Download Pipe PoP Node binary
    echo "Downloading Pipe PoP Node binary..."
    wget https://dl.pipecdn.app/v0.2.0/pop -O $HOME/pipe-pop/pop
    chmod +x $HOME/pipe-pop/pop

    # Create systemd service file for Pipe PoP Node
    echo "Creating systemd service for Pipe PoP Node..."
    SERVICE_FILE="/etc/systemd/system/pipe-pop.service"
    cat <<EOF | sudo tee $SERVICE_FILE > /dev/null
[Unit]
Description=Pipe PoP Node Service
After=network.target
Wants=network-online.target

[Service]
User=$USER
ExecStart=$HOME/pipe-pop/pop \
    --ram=8 \
    --pubKey <SOLANA_PUBLIC_KEY> \
    --max-disk=500 \
    --cache-dir=$HOME/pipe-pop/cache
Restart=always
RestartSec=5
LimitNOFILE=65536
LimitNPROC=4096
StandardOutput=journal
StandardError=journal
SyslogIdentifier=pipe-pop-node
WorkingDirectory=$HOME/pipe-pop

[Install]
WantedBy=multi-user.target
EOF

    # Reload systemd to apply the new service
    echo "Reloading systemd and starting Pipe PoP Node service..."
    sudo systemctl daemon-reload
    sudo systemctl enable pipe-pop
    sudo systemctl start pipe-pop

    # Check status of the Pipe PoP Node service
    echo "Checking status of Pipe PoP Node..."
    sudo systemctl status pipe-pop

    # Show logs of the Pipe PoP Node service
    echo "Monitoring Pipe PoP Node logs..."
    journalctl -u pipe-pop -f -o cat

    # Prompt user to return to main menu
    read -n 1 -s -r -p "Press any key to return to the main menu..."
}
